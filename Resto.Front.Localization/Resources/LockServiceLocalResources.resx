<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BanquetLockedOnTerminal" xml:space="preserve">
    <value>Банкет редактируется на терминале {0}.</value>
  </data>
  <data name="BanquetLockedOnTerminalByUser" xml:space="preserve">
    <value>Банкет редактируется на терминале {0} пользователем {1}.</value>
  </data>
  <data name="BanquetNotFound" xml:space="preserve">
    <value>Банкет не существует на главной кассе.</value>
  </data>
  <data name="NewBanquetIsFound" xml:space="preserve">
    <value>Новый банкет уже существует на главной кассе.</value>
  </data>
  <data name="BanquetRevisionIsTooSmall" xml:space="preserve">
    <value>Банкет не может быть заблокирован. Повторите попытку позже.</value>
  </data>
  <data name="ConnectionFailed" xml:space="preserve">
    <value>Не удалось подключиться к главной кассе.</value>
  </data>
  <data name="MainCashIsNotReady" xml:space="preserve">
    <value>Происходит запуск главной кассы. Повторите попытку позже.</value>
  </data>
  <data name="ObjectLockedOnTerminal" xml:space="preserve">
    <value>Объект используется на терминале {0}.</value>
  </data>
  <data name="ObjectLockedOnTerminalByUser" xml:space="preserve">
    <value>Объект используется на терминале {0} пользователем {1}.</value>
  </data>
  <data name="ObjectNotFound" xml:space="preserve">
    <value>Объект не существует на главной кассе.</value>
  </data>
  <data name="NewObjectIsFound" xml:space="preserve">
    <value>Новый объект уже существует на главной кассе.</value>
  </data>
  <data name="ObjectRevisionIsTooSmall" xml:space="preserve">
    <value>Объект не может быть заблокирован. Повторите попытку позже.</value>
  </data>
  <data name="OrderLockedOnTerminal" xml:space="preserve">
    <value>Заказ редактируется на терминале {0}.</value>
  </data>
  <data name="OrderLockedOnTerminalByUser" xml:space="preserve">
    <value>Заказ редактируется на терминале {0} пользователем {1}.</value>
  </data>
  <data name="OrderNotFound" xml:space="preserve">
    <value>Заказ не существует на главной кассе.</value>
  </data>
  <data name="NewOrderIsFound" xml:space="preserve">
    <value>Новый заказ уже существует на главной кассе.</value>
  </data>
  <data name="OrderRevisionIsTooSmall" xml:space="preserve">
    <value>Заказ не может быть заблокирован. Повторите попытку позже.</value>
  </data>
  <data name="ReserveLockedOnTerminal" xml:space="preserve">
    <value>Резерв редактируется на терминале {0}.</value>
  </data>
  <data name="ReserveLockedOnTerminalByUser" xml:space="preserve">
    <value>Резерв редактируется на терминале {0} пользователем {1}.</value>
  </data>
  <data name="ReserveNotFound" xml:space="preserve">
    <value>Резерв не существует на главной кассе.</value>
  </data>
  <data name="NewReserveIsFound" xml:space="preserve">
    <value>Новый резерв уже существует на главной кассе.</value>
  </data>
  <data name="ReserveRevisionIsTooSmall" xml:space="preserve">
    <value>Резерв не может быть заблокирован. Повторите попытку позже.</value>
  </data>
  <data name="DeliveryLockedOnTerminal" xml:space="preserve">
    <value>Доставка редактируется на терминале {0}.</value>
  </data>
  <data name="DeliveryLockedOnTerminalByUser" xml:space="preserve">
    <value>Доставка редактируется на терминале {0} пользователем {1}.</value>
  </data>
  <data name="DeliveryNotFound" xml:space="preserve">
    <value>Доставка не существует на главной кассе.</value>
  </data>
  <data name="DeliveryRevisionIsTooSmall" xml:space="preserve">
    <value>Доставка не может быть заблокирована. Повторите попытку позже.</value>
  </data>
  <data name="NewDeliveryIsFound" xml:space="preserve">
    <value>Новая доставка уже существует на главной кассе.</value>
  </data>
</root>